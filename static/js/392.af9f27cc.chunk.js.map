{"version":3,"file":"static/js/392.af9f27cc.chunk.js","mappings":"6PACA,EAA0B,sBAA1B,EAAuD,mBAAvD,EAAqF,uBAArF,EAAuH,uBAAvH,EAA8J,4BAA9J,EAAqM,uBAArM,EAAoO,oB,mBCkEpO,EA3Da,WACX,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,sGAEZJ,GAAW,GAFC,UAGWK,EAAAA,EAAAA,IAAaJ,GAHxB,gBAGJK,EAHI,EAGJA,KACRR,EAAQQ,GACRN,GAAW,GALC,kDAOZO,QAAQC,IAAR,MAPY,yBASZR,GAAW,GATC,6EAAH,qDAYbI,GACD,GAAE,CAACH,KAGF,8BACGF,EACC,aACEF,GAAQA,EAAKY,OAAS,GACxB,gBAAKC,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACGd,EAAKe,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OACR,gBAAaN,UAAWC,EAAxB,UAEGI,GACC,gBACEL,UAAWC,EACXM,IAAKJ,EACLK,IAAG,wCAAmCH,MAGxC,gBAAKL,UAAWC,EAAaM,IAAKJ,EAAMK,IAAKC,KAG/C,cAAGT,UAAWC,EAAd,SAA6BE,KAC7B,cAAGH,UAAWC,EAAd,SAAkCG,MAb3BE,EADD,SAoBd,cAAGN,UAAWC,EAAd,4BAIP,C,yLC3DKS,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIP,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wHAGoBP,EAASQ,IAH7B,uBAGwC,CACzCL,OAAQ,CACNI,KAAAA,KALD,uBAGK9B,EAHL,EAGKA,KAHL,kBASIA,GATJ,2HAeA,SAAegC,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bb,GAA/B,kFACCc,EADD,iBACmBd,GADnB,kBAGoBI,EAASQ,IAAIE,GAHjC,uBAGKjC,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA4BW,GAA5B,kFACCc,EADD,iBACmBd,EADnB,8BAGoBI,EAASQ,IAAIE,GAHjC,uBAGKjC,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAekC,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bf,GAA/B,kFACCc,EADD,iBACmBd,EADnB,8BAGoBI,EAASQ,IAAIE,GAHjC,uBAGKjC,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAemC,EAAtB,iDAAO,OAAP,oBAAO,WAA2BC,EAAaN,GAAxC,gFACCG,EADD,8BACgCG,GADhC,kBAGgBb,EAASQ,IAAIE,EAAO,CACrCP,OAAQ,CACNI,KAAAA,KALD,cAGG9B,EAHH,yBAQIA,GARJ,2H","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx","shared/services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listImg\":\"cast_listImg__tVnM6\",\"list\":\"cast_list__bULim\",\"listItem\":\"cast_listItem__Km70l\",\"listName\":\"cast_listName__6beV9\",\"listCharacter\":\"cast_listCharacter__oFnba\",\"listWrap\":\"cast_listWrap__U34ca\",\"error\":\"cast_error__hduCn\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieCast } from '../../shared/services/api';\nimport css from './cast.module.css';\nimport PropTypes from 'prop-types';\n\nimport userImg from '../../img/user.jpg';\n\nconst Cast = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const { cast } = await getMovieCast(movieId);\n        setData(cast);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        'Loading...'\n      ) : data && data.length > 0 ? (\n        <div className={css.listWrap}>\n          <ul className={css.list}>\n            {data.map(({ name, character, profile_path, id }) => (\n              <li key={id} className={css.listItem}>\n                {}\n                {profile_path ? (\n                  <img\n                    className={css.listImg}\n                    alt={name}\n                    src={`https://image.tmdb.org/t/p/w92${profile_path}`}\n                  />\n                ) : (\n                  <img className={css.listImg} alt={name} src={userImg} />\n                )}\n\n                <p className={css.listName}>{name}</p>\n                <p className={css.listCharacter}>{character}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p className={css.error}>No data found</p>\n      )}\n    </>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.number,\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '31449444226ba6345698313fe055564a',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendingMovies(page) {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query, {\n      params: {\n        page,\n      },\n    });\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCast(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString, page) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const data = await instance.get(query, {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["useState","data","setData","loading","setLoading","movieId","useParams","useEffect","getData","getMovieCast","cast","console","log","length","className","css","map","name","character","profile_path","id","alt","src","userImg","instance","axios","baseURL","params","api_key","language","getTrendingMovies","page","get","getMovieDetails","query","getMovieReviews","searchMovie","queryString"],"sourceRoot":""}