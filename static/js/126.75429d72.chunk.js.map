{"version":3,"file":"static/js/126.75429d72.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Home/home.module.css?3638","components/MovieList/movieList.styled.js","components/MovieList/MovieList.jsx","components/Home/Home.jsx","components/Paginator/paginator.styled.js","components/Paginator/Paginator.jsx","shared/services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieItem\":\"home_movieItem__MmdJy\"};","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  color: blue;\n  text-decoration: none;\n\n  &:hover {\n    color: lightblue;\n  }\n`;\n\nexport const ListMovies = styled.ul`\n  list-style-type: none;\n  margin-bottom: 10px;\n  font-size: 20px;\n  margin-left: 100px;\n`;\n\nexport const MovieItem = styled.li`\n  position: relative;\n  display: flex;\n  padding: 5px 10px;\n`;\n","// import { Link } from 'react-router-dom';\nimport { ListMovies, MovieItem, StyledLink } from './movieList.styled';\n\nconst MovieList = ({ movies, location }) => {\n  return (\n    <>\n      <ListMovies>\n        {movies.map(({ title, id }) => (\n          <MovieItem key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </StyledLink>\n          </MovieItem>\n        ))}\n      </ListMovies>\n    </>\n  );\n};\n\nexport default MovieList;\n","import { useState, useEffect, useMemo } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getTrendingMovies } from '../../shared/services/api';\nimport css from './home.module.css';\nimport Paginator from 'components/Paginator/Paginator';\n\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const [searchParams, setSearchParams] = useSearchParams({ page: 1 });\n\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n  const page = Number(params.page || 1);\n\n  const [totalPages, settotalPages] = useState(0);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const data = await getTrendingMovies(page);\n        setMovies(data.results);\n        settotalPages(data.total_pages);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [page]);\n\n  return (\n    <>\n      <h2 className={css.title}>Trending movies:</h2>\n\n      {loading ? (\n        'Loading...'\n      ) : (\n        <>\n          <MovieList movies={movies} location={location} />\n        </>\n      )}\n\n      <Paginator\n        totalPages={totalPages}\n        setSearchParams={setSearchParams}\n        params={params}\n        currentPage={Number(params?.page - 1) || 0}\n      />\n    </>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nexport const StyledPaginate = styled(ReactPaginate)`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  margin: 10px 0;\n  font-size: 18px;\n  .selected {\n    color: white;\n    background-color: orange;\n  }\n\n  li {\n    list-style-type: none;\n\n    border: 1px solid orange;\n    border-radius: 7px;\n    &:hover {\n      background-color: #fff555;\n      color: #000;\n    }\n  }\n  a {\n    display: block;\n    padding: 5px 10px;\n    cursor: pointer;\n  }\n`;\n","import { StyledPaginate } from './paginator.styled';\nimport PropTypes from 'prop-types';\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\n\nfunction Paginator({ totalPages, setSearchParams, params, currentPage }) {\n\n  const handlePageClick = event => {\n    // set page= to the page number in the url\n\n    // passing other parameters from string to url\n    setSearchParams({ ...params, page: event.selected + 1 });\n  };\n\n  return (\n    <>\n      <StyledPaginate\n        breakLabel=\"...\"\n        previousLabel={<IoIosArrowBack />}\n        nextLabel={<IoIosArrowForward />}\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={4}\n        marginPagesDisplayed={2}\n        pageCount={totalPages}\n        renderOnZeroPageCount={null}\n        forcePage={currentPage}\n      />\n    </>\n  );\n}\n\nPaginator.propTypes = {\n  totalPages: PropTypes.number.isRequired,\n  setSearchParams: PropTypes.func.isRequired,\n  params: PropTypes.object.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default Paginator;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '31449444226ba6345698313fe055564a',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendingMovies(page) {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query, {\n      params: {\n        page,\n      },\n    });\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCast(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString, page) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const data = await instance.get(query, {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["StyledLink","styled","Link","ListMovies","MovieItem","movies","location","map","title","id","to","state","from","useState","setMovies","loading","setLoading","useSearchParams","page","searchParams","setSearchParams","params","useMemo","Object","fromEntries","Number","totalPages","settotalPages","useLocation","useEffect","getData","getTrendingMovies","data","results","total_pages","console","log","className","css","Paginator","currentPage","StyledPaginate","ReactPaginate","breakLabel","previousLabel","nextLabel","onPageChange","event","selected","pageRangeDisplayed","marginPagesDisplayed","pageCount","renderOnZeroPageCount","forcePage","instance","axios","baseURL","api_key","language","get","getMovieDetails","query","getMovieCast","getMovieReviews","searchMovie","queryString"],"sourceRoot":""}